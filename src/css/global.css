@import reset.css;

:root {
  --size-300: 0.75rem;
  --size-400: 1rem;
  --size-500: 1.33rem;
  --size-600: 1.77rem;
  --size-700: 2.36rem;
  --size-800: 3.15rem;
  --size-900: 4.2rem;
}

body {
  background: #252525;
  color: #f3f3f3;
  line-height: 1.5;
  font-family: Georgia, serif;
  padding: 2rem 0;
}

a:not([class]) {
  color: currentColor;
}

:focus {
  outline: 2px dashed;
  outline-offset: 0.25rem;
}

main:focus {
  outline: none;
}

[href]:hover {
  text-decoration: none;
}

h1,
h2,
h3,
h4 {
  font-family: -apple-system, BlinkMacSystemFont, avenir next, avenir, helvetica neue,
    helvetica, Ubuntu, roboto, noto, segoe ui, arial, sans-serif;
  line-height: 1.3;
}

h1,
h2 {
  font-weight: 900;
}

h1 {
  font-size: var(--size-700);
}

h2 {
  font-size: var(--size-600);
}

h3 {
  font-size: var(--size-600);
}

img {
  max-width: min(55rem, 100%);
}

figcaption {
  font-size: var(--size-300);

  font-style: italic;
  margin-top: 1rem;
}

blockquote {
  padding-left: var(--size-600);
  border-left: 5px solid;
  font-style: italic;
}

::selection {
  color: #fff;
  background: rgba(0, 0, 0, 0.99);
}

.flow > * + * {
  margin-top: var(--flow-space, 1em);
}

p,
li {
  max-width: 60ch;
}

h1 {
  max-width: 15ch;
}

h2,
h3 {
  max-width: 25ch;
}

.post {
  --flow-space: var(--size-700);

  width: 90vw;
  width: clamp(16rem, 90vw, 70rem);
  margin-left: auto;
  margin-right: auto;
  padding-left: 1.5rem;
  padding-right: 1.5rem;
}

.post time {
  --flow-space: var(--size-400);
  display: block;
}

.post :is(h2, h3) {
  --flow-space: var(--size-900);
}

.post :is(h2, h3) + * {
  --flow-space: var(--size-400);
}

.post figure,
.post figure + * {
  --flow-space: var(--size-900);
}

@media (min-width: 45em) {
  h1 {
    font-size: var(--size-900);
  }

  h2 {
    font-size: var(--size-700);
  }

  p {
    font-size: var(--size-500);
  }

  figcaption {
    font-size: var(--size-400);
  }

  blockquote p {
    font-size: var(--size-600);
    max-width: 40ch;
  }

  .post time {
    font-size: var(--size-600);
  }
}

/* auto-grid also from Piccalilli */
/*
  AUTO GRID
  Set the minimum item size with `--auto-grid-min-size` and you'll
  get a fully responsive grid with no media queries.
*/

.image-grid {
  list-style-type:none;
  margin: 0;
  padding: 0;
}

.auto-grid {
  --auto-grid-min-size: 16rem;
}

.auto-grid > * {
  max-width: 400px;
}

.auto-grid > * + * {
  margin-top: 1rem;
}

@supports(display: grid) {
  .auto-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(var(--auto-grid-min-size), 1fr));
    grid-gap: 1rem;
  }
  
  .auto-grid > * {
    max-width: unset;
  }

  .auto-grid > * + * {
    margin-top: unset;
  }
}

/*
  WRAPPER
  A utility with a max width that contains child elements and horizontal centers them
*/
.wrapper {
  max-width: 65rem;
  margin: 0 auto;
  padding: 0 1rem;
}